type _Schema_
  @fulltext(
    name: "cubanseaSearch"
    language: en
    algorithm: rank
    include: [
      {
        entity: "ERC721Token"
        fields: [{ name: "name" }, { name: "description" }]
      }
    ]
  )

type ERC721Token @entity {
  id: ID!
  contract: ERC721Contract!
  identifier: BigInt!
  owner: Account!
  approval: Account!
  uri: String
  image: String
  name: String
  description: String
  transfers: [ERC721Transfer!]! @derivedFrom(field: "token")
  price: BigInt # uint256
  seller: Account
  createdAtTimestamp: BigInt
  soldAtTimestamp: BigInt
  creatorUser: User
  ownerUser: User
}

type User @entity {
  id: ID!
  tokens: [ERC721Token!]! @derivedFrom(field: "ownerUser")
  created: [ERC721Token!]! @derivedFrom(field: "creatorUser")
}

type MarketTokenMinted @entity {
  id: ID!
  itemId: BigInt! # uint256
  nftContract: Bytes! # address
  tokenId: BigInt! # uint256
  seller: Bytes! # address
  owner: Bytes! # address
  price: BigInt! # uint256
  sold: Boolean! # bool
}

type MarketTokenSold @entity {
  id: ID!
  itemId: BigInt! # uint256
  nftContract: Bytes! # address
  tokenId: BigInt! # uint256
  seller: Bytes! # address
  owner: Bytes! # address
  price: BigInt! # uint256
  sold: Boolean! # bool
}

type Account @entity {
  id: ID!
  asERC721: ERC721Contract
  ERC721tokens: [ERC721Token!]! @derivedFrom(field: "owner")
  ERC721operatorOwner: [ERC721Operator!]! @derivedFrom(field: "owner")
  ERC721operatorOperator: [ERC721Operator!]! @derivedFrom(field: "operator")
  ERC721transferFromEvent: [ERC721Transfer!]! @derivedFrom(field: "from")
  ERC721transferToEvent: [ERC721Transfer!]! @derivedFrom(field: "to")
  events: [Event!]! @derivedFrom(field: "emitter")
}
type ERC721Contract @entity {
  id: ID!
  asAccount: Account!
  supportsMetadata: Boolean
  name: String
  symbol: String
  tokens: [ERC721Token!]! @derivedFrom(field: "contract")
  operators: [ERC721Operator!]! @derivedFrom(field: "contract")
  transfers: [ERC721Transfer!]! @derivedFrom(field: "contract")
}

type ERC721Operator @entity {
  id: ID!
  contract: ERC721Contract!
  owner: Account!
  operator: Account!
  approved: Boolean!
}
type ERC721Transfer implements Event @entity {
  id: ID!
  emitter: Account!
  transaction: Transaction!
  timestamp: BigInt!
  contract: ERC721Contract!
  token: ERC721Token!
  from: Account!
  to: Account!
}
interface Event {
  id: ID!
  transaction: Transaction!
  emitter: Account!
  timestamp: BigInt!
}
type Transaction @entity {
  id: ID!
  timestamp: BigInt!
  blockNumber: BigInt!
  events: [Event!]! @derivedFrom(field: "transaction")
}
